// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: group.proto

package groupservice

import (
	"context"

	"movieReviewSystem/movieReviewSystemApi/group/groupRpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Group            = __.Group
	GroupAdminIdReq  = __.GroupAdminIdReq
	GroupAdminIdResp = __.GroupAdminIdResp
	GroupCreateReq   = __.GroupCreateReq
	GroupCreateResp  = __.GroupCreateResp
	GroupDeleteReq   = __.GroupDeleteReq
	GroupDeleteResp  = __.GroupDeleteResp
	GroupUserIdReq   = __.GroupUserIdReq
	GroupUserIdResp  = __.GroupUserIdResp

	GroupService interface {
		GroupCreate(ctx context.Context, in *GroupCreateReq, opts ...grpc.CallOption) (*GroupCreateResp, error)
		GroupUserId(ctx context.Context, in *GroupUserIdReq, opts ...grpc.CallOption) (*GroupUserIdResp, error)
		GroupAdminId(ctx context.Context, in *GroupAdminIdReq, opts ...grpc.CallOption) (*GroupAdminIdResp, error)
		GroupDelete(ctx context.Context, in *GroupDeleteReq, opts ...grpc.CallOption) (*GroupDeleteResp, error)
	}

	defaultGroupService struct {
		cli zrpc.Client
	}
)

func NewGroupService(cli zrpc.Client) GroupService {
	return &defaultGroupService{
		cli: cli,
	}
}

func (m *defaultGroupService) GroupCreate(ctx context.Context, in *GroupCreateReq, opts ...grpc.CallOption) (*GroupCreateResp, error) {
	client := __.NewGroupServiceClient(m.cli.Conn())
	return client.GroupCreate(ctx, in, opts...)
}

func (m *defaultGroupService) GroupUserId(ctx context.Context, in *GroupUserIdReq, opts ...grpc.CallOption) (*GroupUserIdResp, error) {
	client := __.NewGroupServiceClient(m.cli.Conn())
	return client.GroupUserId(ctx, in, opts...)
}

func (m *defaultGroupService) GroupAdminId(ctx context.Context, in *GroupAdminIdReq, opts ...grpc.CallOption) (*GroupAdminIdResp, error) {
	client := __.NewGroupServiceClient(m.cli.Conn())
	return client.GroupAdminId(ctx, in, opts...)
}

func (m *defaultGroupService) GroupDelete(ctx context.Context, in *GroupDeleteReq, opts ...grpc.CallOption) (*GroupDeleteResp, error) {
	client := __.NewGroupServiceClient(m.cli.Conn())
	return client.GroupDelete(ctx, in, opts...)
}
