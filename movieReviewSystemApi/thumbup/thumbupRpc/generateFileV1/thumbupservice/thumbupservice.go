// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: thumbup.proto

package thumbupservice

import (
	"context"

	"movieReviewSystem/movieReviewSystemApi/thumbup/thumbupRpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ThumbUp                  = __.ThumbUp
	ThumbUpCreateReq         = __.ThumbUpCreateReq
	ThumbUpCreateResp        = __.ThumbUpCreateResp
	ThumbUpGetByBaseIdReq    = __.ThumbUpGetByBaseIdReq
	ThumbUpGetByThumbUpIdReq = __.ThumbUpGetByThumbUpIdReq
	ThumbUpGetByUserIdReq    = __.ThumbUpGetByUserIdReq
	ThumbUpGetResp           = __.ThumbUpGetResp
	ThumbUpGetRespStruct     = __.ThumbUpGetRespStruct

	ThumbUpService interface {
		ThumbUpGetByBaseId(ctx context.Context, in *ThumbUpGetByBaseIdReq, opts ...grpc.CallOption) (*ThumbUpGetResp, error)
		ThumbUpGetByUserId(ctx context.Context, in *ThumbUpGetByUserIdReq, opts ...grpc.CallOption) (*ThumbUpGetResp, error)
		ThumbUpGetByThumbUpId(ctx context.Context, in *ThumbUpGetByThumbUpIdReq, opts ...grpc.CallOption) (*ThumbUpGetResp, error)
		ThumpUpCreate(ctx context.Context, in *ThumbUpCreateReq, opts ...grpc.CallOption) (*ThumbUpCreateResp, error)
	}

	defaultThumbUpService struct {
		cli zrpc.Client
	}
)

func NewThumbUpService(cli zrpc.Client) ThumbUpService {
	return &defaultThumbUpService{
		cli: cli,
	}
}

func (m *defaultThumbUpService) ThumbUpGetByBaseId(ctx context.Context, in *ThumbUpGetByBaseIdReq, opts ...grpc.CallOption) (*ThumbUpGetResp, error) {
	client := __.NewThumbUpServiceClient(m.cli.Conn())
	return client.ThumbUpGetByBaseId(ctx, in, opts...)
}

func (m *defaultThumbUpService) ThumbUpGetByUserId(ctx context.Context, in *ThumbUpGetByUserIdReq, opts ...grpc.CallOption) (*ThumbUpGetResp, error) {
	client := __.NewThumbUpServiceClient(m.cli.Conn())
	return client.ThumbUpGetByUserId(ctx, in, opts...)
}

func (m *defaultThumbUpService) ThumbUpGetByThumbUpId(ctx context.Context, in *ThumbUpGetByThumbUpIdReq, opts ...grpc.CallOption) (*ThumbUpGetResp, error) {
	client := __.NewThumbUpServiceClient(m.cli.Conn())
	return client.ThumbUpGetByThumbUpId(ctx, in, opts...)
}

func (m *defaultThumbUpService) ThumpUpCreate(ctx context.Context, in *ThumbUpCreateReq, opts ...grpc.CallOption) (*ThumbUpCreateResp, error) {
	client := __.NewThumbUpServiceClient(m.cli.Conn())
	return client.ThumpUpCreate(ctx, in, opts...)
}
