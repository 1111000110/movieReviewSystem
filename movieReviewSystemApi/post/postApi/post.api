syntax = "v1"

info (
	title:   "帖子模块"
	desc:    "帖子模块"
	author:  "张璇"
	email:   "xatuzx2025@163.com"
	version: "1.0"
)

type ( // 帖子结构体
	Post {
		UserId     int64    `json:"userId"`
		ThemeId    int64    `json:"themeId"`
		Title      string   `json:"title"`
		Text       string   `json:"text"`
		Image      []string `json:"image"`
		Video      []string `json:"video"`
		CreateTime int64    `json:"createTime"`
		UpdateTime int64    `json:"updateTime"`
		Source     int64    `json:"source"`
	}
)

type ( //发布
	PostCreateReq {
		UserId  int64    `json:"userId"`
		ThemeId int64    `json:"themeId"`
		Title   string   `json:"title"`
		Text    string   `json:"text"`
		Image   []string `json:"image"`
		Video   []string `json:"video"`
		Source  int64    `json:"source"`
	}
	PostCreateResp {
		PostId int64 `json:"postId"`
	}
)

type ( //查询
	PostFindByPostIdReq {
		PostId int64 `from:"postId"`
	}
	PostFindResp {
		PostId int64    `json:"postId"`
		Text   string   `json:"text"`
		Image  []string `json:"image"`
		Video  []string `json:"video"`
		UserId int64    `json:"userId"`
	}
)

type (
	PostGetListRep {
		UserId int64 `form:"userId"`
		Sort   int64 `form:"sort"`
		Offset int64 `form:"offset"`
		Limit  int64 `form:"limit"`
	}
	PostGetListResp {
		PostInfos []Post `json:"postInfos"`
	}
)

type (
	PostDeleteByPostIdReq {
		PostId int64 `json:"postId"`
	}
	PostDeleteResp  {}
)

@server (
	group:      Post // 统一管理用户相关 API
	prefix:     /v1 // v1 版本
	timeout:    3s // 超时时间
	maxBytes:   1048576 // 最大结构体
	middleware: Middleware // 中间件
	jwt:        Auth // JWT 认证
)
service Post {
	@handler PostCreate
	put /post/delete (PostCreateReq) returns (PostCreateResp)

	@handler PostDeleteByPostId
	put /post/update (PostDeleteByPostIdReq) returns (PostDeleteResp)

	@handler PostFindByPostId
	get /post/query (PostFindByPostIdReq) returns (PostFindResp)

	@handler PostGetList
	get /post/list (PostGetListRep) returns (PostGetListResp)
}

