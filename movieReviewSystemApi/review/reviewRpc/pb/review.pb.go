// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v3.19.4
// source: review.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Review struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ReviewId         int64                  `protobuf:"varint,1,opt,name=ReviewId,proto3" json:"ReviewId,omitempty"`
	UserId           int64                  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	BaseId           int64                  `protobuf:"varint,3,opt,name=BaseId,proto3" json:"BaseId,omitempty"`
	RootId           int64                  `protobuf:"varint,4,opt,name=RootId,proto3" json:"RootId,omitempty"`
	HeadId           int64                  `protobuf:"varint,5,opt,name=HeadId,proto3" json:"HeadId,omitempty"`
	Text             string                 `protobuf:"bytes,6,opt,name=Text,proto3" json:"Text,omitempty"`
	Status           int64                  `protobuf:"varint,7,opt,name=Status,proto3" json:"Status,omitempty"`
	Level            int64                  `protobuf:"varint,8,opt,name=Level,proto3" json:"Level,omitempty"`
	RootCommentCount int64                  `protobuf:"varint,9,opt,name=RootCommentCount,proto3" json:"RootCommentCount,omitempty"`
	CreateAt         int64                  `protobuf:"varint,10,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	UpdateAt         int64                  `protobuf:"varint,11,opt,name=UpdateAt,proto3" json:"UpdateAt,omitempty"`
	Like             int64                  `protobuf:"varint,12,opt,name=Like,proto3" json:"Like,omitempty"`
	DisLike          int64                  `protobuf:"varint,13,opt,name=DisLike,proto3" json:"DisLike,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Review) Reset() {
	*x = Review{}
	mi := &file_review_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{0}
}

func (x *Review) GetReviewId() int64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

func (x *Review) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Review) GetBaseId() int64 {
	if x != nil {
		return x.BaseId
	}
	return 0
}

func (x *Review) GetRootId() int64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *Review) GetHeadId() int64 {
	if x != nil {
		return x.HeadId
	}
	return 0
}

func (x *Review) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Review) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Review) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Review) GetRootCommentCount() int64 {
	if x != nil {
		return x.RootCommentCount
	}
	return 0
}

func (x *Review) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Review) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *Review) GetLike() int64 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *Review) GetDisLike() int64 {
	if x != nil {
		return x.DisLike
	}
	return 0
}

type ReviewGetByBaseIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseId        int64                  `protobuf:"varint,1,opt,name=BaseId,proto3" json:"BaseId,omitempty"`
	HeadId        int64                  `protobuf:"varint,2,opt,name=HeadId,proto3" json:"HeadId,omitempty"`
	Offset        int64                  `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewGetByBaseIdReq) Reset() {
	*x = ReviewGetByBaseIdReq{}
	mi := &file_review_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewGetByBaseIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewGetByBaseIdReq) ProtoMessage() {}

func (x *ReviewGetByBaseIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewGetByBaseIdReq.ProtoReflect.Descriptor instead.
func (*ReviewGetByBaseIdReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{1}
}

func (x *ReviewGetByBaseIdReq) GetBaseId() int64 {
	if x != nil {
		return x.BaseId
	}
	return 0
}

func (x *ReviewGetByBaseIdReq) GetHeadId() int64 {
	if x != nil {
		return x.HeadId
	}
	return 0
}

func (x *ReviewGetByBaseIdReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReviewGetByBaseIdReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ReviewGetByRootIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RootId        int64                  `protobuf:"varint,1,opt,name=RootId,proto3" json:"RootId,omitempty"`
	HeadId        int64                  `protobuf:"varint,2,opt,name=HeadId,proto3" json:"HeadId,omitempty"`
	Offset        int64                  `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewGetByRootIdReq) Reset() {
	*x = ReviewGetByRootIdReq{}
	mi := &file_review_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewGetByRootIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewGetByRootIdReq) ProtoMessage() {}

func (x *ReviewGetByRootIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewGetByRootIdReq.ProtoReflect.Descriptor instead.
func (*ReviewGetByRootIdReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{2}
}

func (x *ReviewGetByRootIdReq) GetRootId() int64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *ReviewGetByRootIdReq) GetHeadId() int64 {
	if x != nil {
		return x.HeadId
	}
	return 0
}

func (x *ReviewGetByRootIdReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReviewGetByRootIdReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ReviewGetResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Review        []*Review              `protobuf:"bytes,1,rep,name=Review,proto3" json:"Review,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewGetResp) Reset() {
	*x = ReviewGetResp{}
	mi := &file_review_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewGetResp) ProtoMessage() {}

func (x *ReviewGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewGetResp.ProtoReflect.Descriptor instead.
func (*ReviewGetResp) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{3}
}

func (x *ReviewGetResp) GetReview() []*Review {
	if x != nil {
		return x.Review
	}
	return nil
}

type ReviewCreateReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Review        []*Review              `protobuf:"bytes,1,rep,name=Review,proto3" json:"Review,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewCreateReq) Reset() {
	*x = ReviewCreateReq{}
	mi := &file_review_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewCreateReq) ProtoMessage() {}

func (x *ReviewCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewCreateReq.ProtoReflect.Descriptor instead.
func (*ReviewCreateReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{4}
}

func (x *ReviewCreateReq) GetReview() []*Review {
	if x != nil {
		return x.Review
	}
	return nil
}

type ReviewCreateResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewCreateResp) Reset() {
	*x = ReviewCreateResp{}
	mi := &file_review_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewCreateResp) ProtoMessage() {}

func (x *ReviewCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewCreateResp.ProtoReflect.Descriptor instead.
func (*ReviewCreateResp) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{5}
}

func (x *ReviewCreateResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReviewDeleteReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Review        []*Review              `protobuf:"bytes,1,rep,name=Review,proto3" json:"Review,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewDeleteReq) Reset() {
	*x = ReviewDeleteReq{}
	mi := &file_review_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewDeleteReq) ProtoMessage() {}

func (x *ReviewDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewDeleteReq.ProtoReflect.Descriptor instead.
func (*ReviewDeleteReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{6}
}

func (x *ReviewDeleteReq) GetReview() []*Review {
	if x != nil {
		return x.Review
	}
	return nil
}

type ReviewDeleteByHeadIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HeadId        []int64                `protobuf:"varint,1,rep,packed,name=HeadId,proto3" json:"HeadId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewDeleteByHeadIdReq) Reset() {
	*x = ReviewDeleteByHeadIdReq{}
	mi := &file_review_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewDeleteByHeadIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewDeleteByHeadIdReq) ProtoMessage() {}

func (x *ReviewDeleteByHeadIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewDeleteByHeadIdReq.ProtoReflect.Descriptor instead.
func (*ReviewDeleteByHeadIdReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{7}
}

func (x *ReviewDeleteByHeadIdReq) GetHeadId() []int64 {
	if x != nil {
		return x.HeadId
	}
	return nil
}

type ReviewDeleteResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewDeleteResp) Reset() {
	*x = ReviewDeleteResp{}
	mi := &file_review_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewDeleteResp) ProtoMessage() {}

func (x *ReviewDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewDeleteResp.ProtoReflect.Descriptor instead.
func (*ReviewDeleteResp) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{8}
}

func (x *ReviewDeleteResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_review_proto protoreflect.FileDescriptor

var file_review_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0xd8, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52,
	0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x2a, 0x0a, 0x10, 0x52, 0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x52, 0x6f, 0x6f, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x4c, 0x69,
	0x6b, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x44, 0x69, 0x73, 0x4c, 0x69, 0x6b,
	0x65, 0x22, 0x74, 0x0a, 0x14, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x74, 0x0a, 0x14, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x37, 0x0a,
	0x0d, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26,
	0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x39, 0x0a, 0x0f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x06, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x22, 0x28, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x0f, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26,
	0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x31, 0x0a, 0x17, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x10, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x32, 0xfc, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x48, 0x65, 0x61,
	0x64, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x48, 0x65, 0x61, 0x64, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48,
	0x0a, 0x11, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x47, 0x65, 0x74, 0x42, 0x79, 0x42, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x47, 0x65, 0x74, 0x42, 0x79, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x2e,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_review_proto_rawDescOnce sync.Once
	file_review_proto_rawDescData = file_review_proto_rawDesc
)

func file_review_proto_rawDescGZIP() []byte {
	file_review_proto_rawDescOnce.Do(func() {
		file_review_proto_rawDescData = protoimpl.X.CompressGZIP(file_review_proto_rawDescData)
	})
	return file_review_proto_rawDescData
}

var file_review_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_review_proto_goTypes = []any{
	(*Review)(nil),                  // 0: review.Review
	(*ReviewGetByBaseIdReq)(nil),    // 1: review.ReviewGetByBaseIdReq
	(*ReviewGetByRootIdReq)(nil),    // 2: review.ReviewGetByRootIdReq
	(*ReviewGetResp)(nil),           // 3: review.ReviewGetResp
	(*ReviewCreateReq)(nil),         // 4: review.ReviewCreateReq
	(*ReviewCreateResp)(nil),        // 5: review.ReviewCreateResp
	(*ReviewDeleteReq)(nil),         // 6: review.ReviewDeleteReq
	(*ReviewDeleteByHeadIdReq)(nil), // 7: review.ReviewDeleteByHeadIdReq
	(*ReviewDeleteResp)(nil),        // 8: review.ReviewDeleteResp
}
var file_review_proto_depIdxs = []int32{
	0, // 0: review.ReviewGetResp.Review:type_name -> review.Review
	0, // 1: review.ReviewCreateReq.Review:type_name -> review.Review
	0, // 2: review.ReviewDeleteReq.Review:type_name -> review.Review
	4, // 3: review.ReviewService.ReviewCreate:input_type -> review.ReviewCreateReq
	6, // 4: review.ReviewService.ReviewDelete:input_type -> review.ReviewDeleteReq
	7, // 5: review.ReviewService.ReviewDeleteByHeadId:input_type -> review.ReviewDeleteByHeadIdReq
	1, // 6: review.ReviewService.ReviewGetByBaseId:input_type -> review.ReviewGetByBaseIdReq
	2, // 7: review.ReviewService.ReviewGetByRootId:input_type -> review.ReviewGetByRootIdReq
	5, // 8: review.ReviewService.ReviewCreate:output_type -> review.ReviewCreateResp
	8, // 9: review.ReviewService.ReviewDelete:output_type -> review.ReviewDeleteResp
	8, // 10: review.ReviewService.ReviewDeleteByHeadId:output_type -> review.ReviewDeleteResp
	3, // 11: review.ReviewService.ReviewGetByBaseId:output_type -> review.ReviewGetResp
	3, // 12: review.ReviewService.ReviewGetByRootId:output_type -> review.ReviewGetResp
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_review_proto_init() }
func file_review_proto_init() {
	if File_review_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_review_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_review_proto_goTypes,
		DependencyIndexes: file_review_proto_depIdxs,
		MessageInfos:      file_review_proto_msgTypes,
	}.Build()
	File_review_proto = out.File
	file_review_proto_rawDesc = nil
	file_review_proto_goTypes = nil
	file_review_proto_depIdxs = nil
}
