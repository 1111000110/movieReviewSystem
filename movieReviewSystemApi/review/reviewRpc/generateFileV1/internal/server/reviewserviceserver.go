// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: review.proto

package server

import (
	"context"

	"movieReviewSystem/movieReviewSystemApi/review/reviewRpc/generateFileV1/internal/logic"
	"movieReviewSystem/movieReviewSystemApi/review/reviewRpc/generateFileV1/internal/svc"
	"movieReviewSystem/movieReviewSystemApi/review/reviewRpc/pb"
)

type ReviewServiceServer struct {
	svcCtx *svc.ServiceContext
	__.UnimplementedReviewServiceServer
}

func NewReviewServiceServer(svcCtx *svc.ServiceContext) *ReviewServiceServer {
	return &ReviewServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *ReviewServiceServer) ReviewCreate(ctx context.Context, in *__.ReviewCreateReq) (*__.ReviewCreateResp, error) {
	l := logic.NewReviewCreateLogic(ctx, s.svcCtx)
	return l.ReviewCreate(in)
}

func (s *ReviewServiceServer) ReviewDelete(ctx context.Context, in *__.ReviewDeleteReq) (*__.ReviewDeleteResp, error) {
	l := logic.NewReviewDeleteLogic(ctx, s.svcCtx)
	return l.ReviewDelete(in)
}

func (s *ReviewServiceServer) ReviewDeleteByHeadId(ctx context.Context, in *__.ReviewDeleteByHeadIdReq) (*__.ReviewDeleteResp, error) {
	l := logic.NewReviewDeleteByHeadIdLogic(ctx, s.svcCtx)
	return l.ReviewDeleteByHeadId(in)
}

func (s *ReviewServiceServer) ReviewGetByBaseId(ctx context.Context, in *__.ReviewGetByBaseIdReq) (*__.ReviewGetResp, error) {
	l := logic.NewReviewGetByBaseIdLogic(ctx, s.svcCtx)
	return l.ReviewGetByBaseId(in)
}

func (s *ReviewServiceServer) ReviewGetByRootId(ctx context.Context, in *__.ReviewGetByRootIdReq) (*__.ReviewGetResp, error) {
	l := logic.NewReviewGetByRootIdLogic(ctx, s.svcCtx)
	return l.ReviewGetByRootId(in)
}
