// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: review.proto

package reviewservice

import (
	"context"

	"movieReviewSystem/movieReviewSystemApi/review/reviewRpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Review               = __.Review
	ReviewCreateReq      = __.ReviewCreateReq
	ReviewCreateResp     = __.ReviewCreateResp
	ReviewDeleteReq      = __.ReviewDeleteReq
	ReviewDeleteResp     = __.ReviewDeleteResp
	ReviewGetByBaseIdReq = __.ReviewGetByBaseIdReq
	ReviewGetByRootIdReq = __.ReviewGetByRootIdReq
	ReviewGetResp        = __.ReviewGetResp

	ReviewService interface {
		ReviewCreate(ctx context.Context, in *ReviewCreateReq, opts ...grpc.CallOption) (*ReviewCreateResp, error)
		ReviewDelete(ctx context.Context, in *ReviewDeleteReq, opts ...grpc.CallOption) (*ReviewCreateResp, error)
		ReviewGetByBaseId(ctx context.Context, in *ReviewGetByBaseIdReq, opts ...grpc.CallOption) (*ReviewGetResp, error)
		ReviewGetByRootId(ctx context.Context, in *ReviewGetByRootIdReq, opts ...grpc.CallOption) (*ReviewGetResp, error)
	}

	defaultReviewService struct {
		cli zrpc.Client
	}
)

func NewReviewService(cli zrpc.Client) ReviewService {
	return &defaultReviewService{
		cli: cli,
	}
}

func (m *defaultReviewService) ReviewCreate(ctx context.Context, in *ReviewCreateReq, opts ...grpc.CallOption) (*ReviewCreateResp, error) {
	client := __.NewReviewServiceClient(m.cli.Conn())
	return client.ReviewCreate(ctx, in, opts...)
}

func (m *defaultReviewService) ReviewDelete(ctx context.Context, in *ReviewDeleteReq, opts ...grpc.CallOption) (*ReviewCreateResp, error) {
	client := __.NewReviewServiceClient(m.cli.Conn())
	return client.ReviewDelete(ctx, in, opts...)
}

func (m *defaultReviewService) ReviewGetByBaseId(ctx context.Context, in *ReviewGetByBaseIdReq, opts ...grpc.CallOption) (*ReviewGetResp, error) {
	client := __.NewReviewServiceClient(m.cli.Conn())
	return client.ReviewGetByBaseId(ctx, in, opts...)
}

func (m *defaultReviewService) ReviewGetByRootId(ctx context.Context, in *ReviewGetByRootIdReq, opts ...grpc.CallOption) (*ReviewGetResp, error) {
	client := __.NewReviewServiceClient(m.cli.Conn())
	return client.ReviewGetByRootId(ctx, in, opts...)
}
